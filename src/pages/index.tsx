/* eslint-disable @typescript-eslint/no-misused-promises */
import { signIn, signOut, useSession } from "next-auth/react";
import Head from "next/head";

import { api } from "~/utils/api";
import { type ChangeEvent, useState } from "react";
import { Button } from "~/components/ui/button";
import { Input } from "~/components/ui/input";

export default function Home() {
  // const hello = api.example.hello.useQuery({ text: "hello world" });
  const preSign = api.s3Router.getSignedUrl.useMutation();

  const getPresSignedUrl = async ({
    filename,
    filetype,
    size,
  }: {
    filename: string;
    filetype: string;
    size: number;
  }) => {
    const _response = await preSign.mutateAsync({
      filename,
      filetype,
      size,
    });
    return _response;
  };

  const handleFileUpload = async (event: ChangeEvent<HTMLInputElement>) => {
    const file = event.target.files?.[0];
    if (!file) return;
    const { name, type, size } = file;
    // const filename = encodeURIComponent(name);
    // const filetype = encodeURIComponent(type);
    const filesize = size;
    console.log(filesize);
    console.log(name, type, size);
    // console.log(filename, filetype, filesize);
    const uploadUrl = await getPresSignedUrl({
      filename: name,
      filetype: type,
      size: filesize,
    });

    if (!uploadUrl || !file) {
      console.log("Upload URL has not been set or no file selected.");
      return;
    }
    const headers = new Headers();
    headers.append("Content-Type", type);
    const response = await fetch(uploadUrl, {
      method: "PUT",
      headers: headers,
      body: file,
    });
  };

  return (
    <div className="flex w-full">
      <Head>
        <title>CloudSign</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex flex-1">
        <Input type="file" onChange={handleFileUpload} />
      </main>
    </div>
  );
}

// function AuthShowcase() {
//   const { data: sessionData } = useSession();

//   const { data: secretMessage } = api.example.getSecretMessage.useQuery(
//     undefined, // no input
//     { enabled: sessionData?.user !== undefined },
//   );

//   return (
//     <div className="flex flex-col items-center justify-center gap-4">
//       <p className="text-center text-2xl text-white">
//         {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
//         {secretMessage && <span> - {secretMessage}</span>}
//       </p>
//       <button
//         className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
//         onClick={sessionData ? () => void signOut() : () => void signIn()}
//       >
//         {sessionData ? "Sign out" : "Sign in"}
//       </button>
//     </div>
//   );
// }
